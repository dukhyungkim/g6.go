// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameContent = "content"

// Content mapped from table <content>
type Content struct {
	CoID            *string `gorm:"column:co_id;type:VARCHAR(20)" json:"co_id"`
	CoHTML          *int32  `gorm:"column:co_html;type:INTEGER" json:"co_html"`
	CoSubject       *string `gorm:"column:co_subject;type:VARCHAR(255)" json:"co_subject"`
	CoContent       *string `gorm:"column:co_content;type:TEXT" json:"co_content"`
	CoSeoTitle      *string `gorm:"column:co_seo_title;type:VARCHAR(255)" json:"co_seo_title"`
	CoMobileContent *string `gorm:"column:co_mobile_content;type:TEXT" json:"co_mobile_content"`
	CoSkin          *string `gorm:"column:co_skin;type:VARCHAR(255)" json:"co_skin"`
	CoMobileSkin    *string `gorm:"column:co_mobile_skin;type:VARCHAR(255)" json:"co_mobile_skin"`
	CoTagFilterUse  *int32  `gorm:"column:co_tag_filter_use;type:INTEGER" json:"co_tag_filter_use"`
	CoHit           *int32  `gorm:"column:co_hit;type:INTEGER" json:"co_hit"`
	CoIncludeHead   *string `gorm:"column:co_include_head;type:VARCHAR(255)" json:"co_include_head"`
	CoIncludeTail   *string `gorm:"column:co_include_tail;type:VARCHAR(255)" json:"co_include_tail"`
}

// TableName Content's table name
func (*Content) TableName() string {
	return Prefix + TableNameContent
}
