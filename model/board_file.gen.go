// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameBoardFile = "board_file"

// BoardFile mapped from table <board_file>
type BoardFile struct {
	BoTable    *string    `gorm:"column:bo_table;type:VARCHAR(20)" json:"bo_table"`
	WrID       *int32     `gorm:"column:wr_id;type:INTEGER" json:"wr_id"`
	BfNo       *int32     `gorm:"column:bf_no;type:INTEGER" json:"bf_no"`
	BfSource   *string    `gorm:"column:bf_source;type:VARCHAR(255)" json:"bf_source"`
	BfFile     *string    `gorm:"column:bf_file;type:VARCHAR(255)" json:"bf_file"`
	BfDownload *int32     `gorm:"column:bf_download;type:INTEGER" json:"bf_download"`
	BfContent  *string    `gorm:"column:bf_content;type:TEXT" json:"bf_content"`
	BfFileurl  *string    `gorm:"column:bf_fileurl;type:VARCHAR(255)" json:"bf_fileurl"`
	BfThumburl *string    `gorm:"column:bf_thumburl;type:VARCHAR(255)" json:"bf_thumburl"`
	BfStorage  *string    `gorm:"column:bf_storage;type:VARCHAR(50)" json:"bf_storage"`
	BfFilesize *int32     `gorm:"column:bf_filesize;type:INTEGER" json:"bf_filesize"`
	BfWidth    *int32     `gorm:"column:bf_width;type:INTEGER" json:"bf_width"`
	BfHeight   *int32     `gorm:"column:bf_height;type:INTEGER" json:"bf_height"`
	BfType     *int32     `gorm:"column:bf_type;type:INTEGER" json:"bf_type"`
	BfDatetime *time.Time `gorm:"column:bf_datetime;type:DATETIME" json:"bf_datetime"`
}

// TableName BoardFile's table name
func (*BoardFile) TableName() string {
	return TableNameBoardFile
}
